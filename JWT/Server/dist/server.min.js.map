{"version":3,"sources":["server.js"],"names":["express","require","mongoose","User","json","app","use","cors","PORT","req","res","send","post","regeneratorRuntime","async","_context","prev","next","awrap","create","name","body","email","password","sent","status","t0","error","stop","user"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,SAAWD,QAAQ,YADnBD,KAAOC,QAAU,QAGjBE,KAAOF,QAAQ,sBAFrBA,QAAMC,UAAWD,SAEjB,IAAME,IAAOF,UACbA,IAAAA,IAAQD,QAADI,QAOPC,IAAIC,IAAIC,QAER,IAAMC,KAAO,IAFbH,IAAIC,IAAIC,IAAI,SAAZE,EACAC,GAIQA,EAAIC,KAAK,uBAEjBN,IAAIO,KAAK,gBAAiB,SAAOH,EAAKC,GAAZ,OAAAG,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAFTf,KAATgB,OAAA,CADRC,KAAAX,EAAAY,KAAAD,KAGSE,MAAAb,EAAAY,KAAiBC,MAAAC,SAAAd,EAAAY,KAAAE,YAAA,KAAA,EAAAR,EAAAS,KAAAd,EAAAN,KAAA,CAAAqB,OAAA,OAAAV,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,MAAA,GAAAL,EAAAN,KAAA,CAAAqB,OAAA,QAAAE,MAAA,qBAAA,KAAA,GAAA,IAAA,MAAA,OAAAZ,EAAAa,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAIdN,IAAAA,KAAAA,aAAUD,SAAKC,EAFYZ,GAEjBW,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MACGA,KAAKE,QAAAA,CAHHD,MAFDb,EAAAY,KAAAC,MAiBfC,SAAUd,EAAIY,KAAKE,YAbRF,KAAAA,EAAAA,GAAAA,EAAAA,KAAAA,OAAAA,EAAAA,OAAAA,SAGVjB,EAAKA,KAAA,CAAAqB,OAAA,KAAAI,MAAA,KAHKR,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,OAAAA,SAJIX,EAAAN,KAAA,CAAAqB,OAAA,QAAAI,MAAA,KAIJR,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,YAKdX,SAAAA,QAAIN,kCAAMqB,IAAAA,OAAAA,KAAAA,WAAiBE,QAAAA,IAAAA,0BAAOnB","file":"server.min.js","sourcesContent":["const express = require('express');\r\nconst mongoose = require('mongoose')\r\nconst cors = require('cors')\r\nconst User = require('./Models/userModel')\r\nrequire('dotenv').config()\r\n\r\n\r\n\r\nconst app = express();\r\n//Middlewares\r\napp.use(express.json())\r\napp.use(cors())\r\n//PORT\r\nconst PORT = 8000;\r\n//Routes\r\napp.get('/', (req,res)=>{\r\n        res.send('Hello from server')\r\n})\r\napp.post('/api/register', async (req, res)=>{\r\n    try {\r\n        const user = await User.create({\r\n            name: req.body.name,\r\n            email:req.body.email,\r\n            password:req.body.password\r\n        })\r\n        res.json({status: \"ok\"})\r\n    } catch (error) {\r\n        res.json({status: \"error\", error: \" Duplicate email\"})\r\n        \r\n    }\r\n   \r\n})\r\napp.post('/api/loign', async (req, res)=>{\r\n       const user = await User.findOne({\r\n           email:req.body.email,\r\n           password: req.body.password\r\n       })\r\n       if(user){\r\n        return res.json({status: 'ok', user: true})\r\n       }\r\n       else {\r\n        return res.json({status: 'Error', user: false})\r\n\r\n       }\r\n})\r\n\r\n\r\nmongoose.connect('mongodb://localhost:27017/MERN')\r\napp.listen(PORT, ()=>{\r\n    console.log('Server running on PORT '+ PORT);\r\n})\r\n "]}